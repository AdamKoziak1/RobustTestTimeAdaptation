Traceback (most recent call last):
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/train.py", line 101, in <module>
    train_loaders, eval_loaders = get_img_dataloader(args)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/datautil/getdataloader.py", line 19, in get_img_dataloader
    tedatalist.append(ImageDataset(args.dataset, args.task, args.data_dir,
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/datautil/imgdata/imgdataload.py", line 14, in __init__
    self.imgs = ImageFolder(os.path.join(root_dir,domain_name)).imgs
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/datasets/folder.py", line 310, in __init__
    super().__init__(
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/datasets/folder.py", line 145, in __init__
    classes, class_to_idx = self.find_classes(self.root)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/datasets/folder.py", line 219, in find_classes
    return find_classes(directory)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/datasets/folder.py", line 41, in find_classes
    classes = sorted(entry.name for entry in os.scandir(directory) if entry.is_dir())
FileNotFoundError: [Errno 2] No such file or directory: '/home/adam/Downloads/RobustTestTimeAdaptation/datasets/art_painting'
Traceback (most recent call last):
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/train.py", line 101, in <module>
    train_loaders, eval_loaders = get_img_dataloader(args)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/datautil/getdataloader.py", line 19, in get_img_dataloader
    tedatalist.append(ImageDataset(args.dataset, args.task, args.data_dir,
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/datautil/imgdata/imgdataload.py", line 14, in __init__
    self.imgs = ImageFolder(os.path.join(root_dir,domain_name)).imgs
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/datasets/folder.py", line 310, in __init__
    super().__init__(
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/datasets/folder.py", line 145, in __init__
    classes, class_to_idx = self.find_classes(self.root)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/datasets/folder.py", line 219, in find_classes
    return find_classes(directory)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/datasets/folder.py", line 41, in find_classes
    classes = sorted(entry.name for entry in os.scandir(directory) if entry.is_dir())
FileNotFoundError: [Errno 2] No such file or directory: '/home/adam/Downloads/RobustTestTimeAdaptation/datasets/PACS/art_painting'
Traceback (most recent call last):
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/train.py", line 125, in <module>
    step_vals = algorithm.update(minibatches_device, opt, sch)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/alg/algs/ERM.py", line 28, in update
    loss = F.cross_entropy(self.predict(all_x), all_y)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/alg/algs/ERM.py", line 38, in predict
    return self.network(x)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/network/img_network.py", line 135, in forward
    return self.vit_backbone(x)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/timm/models/vision_transformer.py", line 549, in forward
    x = self.forward_features(x)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/timm/models/vision_transformer.py", line 538, in forward_features
    x = self.blocks(x)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/timm/models/vision_transformer.py", line 269, in forward
    x = x + self.drop_path2(self.ls2(self.mlp(self.norm2(x))))
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/timm/models/layers/mlp.py", line 28, in forward
    x = self.act(x)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torch/nn/modules/activation.py", line 681, in forward
    return F.gelu(input, approximate=self.approximate)
RuntimeError: CUDA out of memory. Tried to allocate 222.00 MiB (GPU 0; 10.75 GiB total capacity; 9.47 GiB already allocated; 77.69 MiB free; 9.71 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  warnings.warn(
/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/venv/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Downloading: "https://download.pytorch.org/models/resnet50-0676ba61.pth" to /home/adam/.cache/torch/hub/checkpoints/resnet50-0676ba61.pth
  0%|          | 0.00/97.8M [00:00<?, ?B/s]  5%|4         | 4.84M/97.8M [00:00<00:01, 50.8MB/s] 13%|#2        | 12.6M/97.8M [00:00<00:01, 68.6MB/s] 23%|##3       | 22.6M/97.8M [00:00<00:00, 85.2MB/s] 32%|###2      | 31.5M/97.8M [00:00<00:00, 88.5MB/s] 44%|####3     | 43.0M/97.8M [00:00<00:00, 99.8MB/s] 57%|#####6    | 55.3M/97.8M [00:00<00:00, 110MB/s]  68%|######8   | 66.6M/97.8M [00:00<00:00, 113MB/s] 79%|#######9  | 77.5M/97.8M [00:00<00:00, 113MB/s] 90%|######### | 88.3M/97.8M [00:00<00:00, 113MB/s]100%|##########| 97.8M/97.8M [00:00<00:00, 104MB/s]
Traceback (most recent call last):
  File "train.py", line 101, in <module>
    train_loaders, eval_loaders = get_img_dataloader(args)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/datautil/getdataloader.py", line 19, in get_img_dataloader
    tedatalist.append(ImageDataset(args.dataset, args.task, args.data_dir,
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/datautil/imgdata/imgdataload.py", line 14, in __init__
    self.imgs = ImageFolder(os.path.join(root_dir,domain_name)).imgs
  File "/home/adam/miniconda3/envs/tta/lib/python3.8/site-packages/torchvision/datasets/folder.py", line 310, in __init__
    super().__init__(
  File "/home/adam/miniconda3/envs/tta/lib/python3.8/site-packages/torchvision/datasets/folder.py", line 145, in __init__
    classes, class_to_idx = self.find_classes(self.root)
  File "/home/adam/miniconda3/envs/tta/lib/python3.8/site-packages/torchvision/datasets/folder.py", line 219, in find_classes
    return find_classes(directory)
  File "/home/adam/miniconda3/envs/tta/lib/python3.8/site-packages/torchvision/datasets/folder.py", line 41, in find_classes
    classes = sorted(entry.name for entry in os.scandir(directory) if entry.is_dir())
FileNotFoundError: [Errno 2] No such file or directory: '../data/PACS/art_painting'
/home/adam/miniconda3/envs/tta/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  warnings.warn(
/home/adam/miniconda3/envs/tta/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Traceback (most recent call last):
  File "train.py", line 125, in <module>
    step_vals = algorithm.update(minibatches_device, opt, sch)
  File "/home/adam/Downloads/RobustTestTimeAdaptation/TSD-master/code/alg/algs/ERM.py", line 35, in update
    return {'class': loss.item()}
KeyboardInterrupt
